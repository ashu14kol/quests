Q1.	

Given the code fragment: 
public class ForTest { 
public static void main(String[] args) { 
int[] array = {1, 2, 3}; 
for ( foo ) { 
} 
} 
Which three code fragments, when replaced individually for foo, enables the program to compile? 
A. int i : array 
B. int i = 0; i < 1; 
C. ; ; 
D. ; i < 1; i++ 
E. i = 0; i<1;
 
****************************************************************
Q2.	Given: 

class Cake { 
int model; 
String flavor; 
Cake() { 
model = 0; 
flavor = "Unknown"; 
} 
} 
public class Test { 
public static void main(String[] args) { 
Cake c = new Cake(); 
bake1(c); 
System.out.println(c.model + " " + c.flavor); 
bake2(c); 
System.out.println(c.model + " " + c.flavor); 
} 
public static Cake bake1(Cake c) { 
c.flavor = "Strawberry"; 
c.model = 1200; 
return c; 
} 
public static void bake2(Cake c) { 
c.flavor = "Chocolate"; 
c.model = 1230; 
return; 
} 
} 
What is the result? 
A. 0 unknown 0 unknown 
B. 1200 Strawberry 1200 Strawberry 
C. 1200 Strawberry 1230 Chocolate 
D. Compilation fails
 
******************************************************************************
Q3.	Given: 

public class Test { 
static boolean bVar; 
public static void main(String[] args) { 
boolean bVar1 = true; 
int count =8; 
do { 
System.out.println("Hello Java! " +count); 
if (count >= 7) { 
bVar1 = false; 
} 
} while (bVar != bVar1 && count > 4); 
count -= 2; 
} 
} 
What is the result? 
A. Hello Java! 8 Hello Java! 6 Hello Java! 4 
B. Hello Java! 8 Hello Java! 6 
C. Hello Java! 8 
D. Compilation fails
 
*********************************************************************************
Q4.	Which usage represents a valid way of compiling java source file with the name "Main"? 

A. javac Main.java 
B. java Main.class 
C. java Main.java 
D. javac Main 
E. java Main 

****************************************************************************
Q5.	Given the code fragment: 

for (int ii = 0; ii < 3;ii++) { 
int count = 0; 
for (int jj = 3; jj > 0; jj--) { 
if (ii == jj) { 
++count; 
break; 
} 
} 
System.out.print(count); continue; } 
What is the result? 
A. 011 
B. 012 
C. 123 
D. 000 

*****************************************************************************
Q6.	 View the exhibit: 

public class Student { 
public String name = ""; 
public int age = 0; 
public String major = "Undeclared"; 
public boolean fulltime = true; 
public void display() { 
System.out.println("Name: " + name + " Major: " + major); } 
public boolean isFullTime() { 
return fulltime; 
} 
} 
Which line of code initializes a student instance? 
A. Student student1; 
B. Student student1 = Student.new(); 
C. Student student1 = new Student(); 
D. Student student1 = Student();

****************************************************************
Q7.	Given: 

public class ColorTest { 
public static void main(String[] args) { 
String[] colors = {"red", "blue","green","yellow","maroon","cyan"}; 
int count = 0; 
for (String c : colors) { 
if (count >= 4) { 
break; 
} 
else { 
continue; 
} 
if (c.length() >= 4) { 
colors[count] = c.substring(0,3); 
} 
count++; 
} 
System.out.println(colors[count]); 
} 
} 
What is the result? 
A. Yellow 
B. Maroon 
C. Compilation fails 
D. A StringIndexOutOfBoundsException is thrown at runtime.

****************************************************************************
Q8.	 Given: 

public class TestOperator { 
public static void main(String[] args) { 
int result = 30 -12 / (2*5)+1; 
System.out.print("Result = " + result); 
} 
} 
What is the result? 
A. Result = 2 
B. Result = 3 
C. Result = 28 
D. Result = 29 
E. Result = 30 

*****************************************************************************
Q9.	Given: 

public class Test { 
public static void main(String[] args) { 
int day = 1; 
switch (day) { 
case "7": System.out.print("Uranus"); 
case "6": System.out.print("Saturn"); 
case "1": System.out.print("Mercury"); 
case "2": System.out.print("Venus"); 
case "3": System.out.print("Earth"); 
case "4": System.out.print("Mars"); 
case "5": System.out.print("Jupiter"); 
} 
} 
} 
Which two modifications, made independently, enable the code to compile and run? 
A. Adding a break statement after each print statement 
B. Adding a default section within the switch code-block 
C. Changing the string literals in each case label to integer 
D. Changing the type of the variable day to String 
E. Arranging the case labels in ascending order 

***********************************************************************
Q 10.	Given the code fragment: 

String[] cartoons = {"tom","jerry","micky","tom"}; 
int counter =0; 
if ("tom".equals(cartoons[0])) { 
counter++; 
} else if ("tom".equals(cartoons[1])) { 
counter++; 
} else if ("tom".equals(cartoons[2])) { 
counter++; 
} else if ("tom".equals(cartoons[3])) { 
counter++; 
} 
System.out.print(counter); 
What is the result? 
A. 1 
B. 2 
C. 4 
D. 0 

***************************************************************************************
Q 11.	Which statement will empty the contents of a StringBuilder variable named sb? 

A. sb.deleteAll(); 
B. sb.delete(0, sb.size()); 
C. sb.delete(0, sb.length()); 
D. sb.removeAll();

**********************************************************************************
Q12.	 A method is declared to take three arguments. A program calls this method and passes only two arguments. What is the results? 

A. Compilation fails. 
B. The third argument is given the value null. 
C. The third argument is given the value void. 
D. The third argument is given the value zero. 
E. The third argument is given the appropriate falsy value for its declared type. 
F. An exception occurs when the method attempts to access the third argument. 

**********************************************************************
Q13.	Given: 

import java.util.*; 
public class Ref { 
public static void main(String[] args) { 
StringBuilder s1 = new StringBuilder("Hello Java!"); 
String s2 = s1.toString(); 
List<String> lst = new ArrayList<String>(); 
lst.add(s2); 
System.out.println(s1.getClass()); 
System.out.println(s2.getClass()); 
System.out.println(lst.getClass()); 
} 
} 
What is the result? 
A. class java.lang.String class java.lang.String class java.util.ArrayList 
B. class java.lang.Object class java.lang. Object class java.util.Collection 
C. class java.lang.StringBuilder class java.lang.String class java.util.ArrayList 
D. class java.lang.StringBuilder class java.lang.String class java.util.List 

************************************************************************
Q14.	Given the code fragment: 

public class Test { 
public static void main(String[] args) { 
boolean isChecked = false; 
int arry[] = {1,3,5,7,8,9}; 
int index = arry.length; 
while ( <code1> ) { 
if (arry[index-1] % 2 ==0) { 
isChecked = true; 
} 
<code2> 
} 
System.out.print(arry(index]+", "+isChecked)); 
} 
} 
Which set of changes enable the code to print 1, true? 
A. Replacing <code1> with index > 0 and replacing <code2> with index--; 
B. Replacing <code1> with index > 0 and replacing <code2> with --index; 
C. Replacing <code1> with index > 5 and replacing <code2> with --index ; 
D. Replacing <code1> with index and replacing <code2> with --index ; 

****************************************************************************
Q15.	 Given: 

class Overloading { 
int x(double d) { 
System.out.println("one"); 
return 0; 
} 
String x(double d) { 
System.out.println("two"); 
return null; 
} 
double x(double d) { 
System.out.println("three"); 
return 0.0; 
} 
public static void main(String[] args) { 
new Overloading().x(4.0); 
} 
} 
What is the result? 
A. One 
B. Two 
C. Three 
D. Compilation fails. 

*****************************************************************************
Q16.	Given: 

abstract class A1 { 
public abstract void m1(); 
public void m2() { System.out.println("Green"); } 
} 
abstract class A2 extends A1 { 
public abstract void m3(); 
public void m1() { System.out.println("Cyan"); } 
public void m2() { System.out.println("Blue"); } 
} 
public class A3 extends A2 { 
public void m1() { System.out.println("Yellow"); } 
public void m2() { System.out.println("Pink"); } 
public void m3() { System.out.println("Red"); } 
public static void main(String[] args) { 
A2 tp = new A3(); 
tp.m1(); 
tp.m2(); 
tp.m3(); 
} 
} 
What is the result? 
A. Yellow Pink Red 
B. Cyan Blue Red 
C. Cyan Green Red 
D. Compilation Fails 

***************************************************************************
17.	Given: 

public class MainMethod { 
void main() { 
System.out.println("one"); 
} 
static void main(String args) { 
System.out.println("two"); 
} 
public static void main(String[] args) { 
System.out.println("three"); 
} 
void mina(Object[] args) { 
System.out.println("four"); 
} 
} 
What is printed out when the program is excuted? 
A. one 
B. two 
C. three 
D. four 

***********************************************************************
Q18.	Given: 

public class MyClass { 
public static void main(String[] args) { 
String s = " Java Duke "; 
int len = s.trim().length(); 
System.out.print(len); 
} 
} 
What is the result? 
A. 8 
B. 9 
C. 11 
D. 10 
E. Compilation fails 

*********************************************************************
Q19.	Given: class Base { 
public static void main(String[] args) { 
System.out.println("Base " + args[2]); 
} 
} 
public class Sub extends Base{ 
public static void main(String[] args) { 
System.out.println("Overriden " + args[1]); 
} 
} 
And the commands: 
javac Sub.java 
java Sub 10 20 30 
What is the result? 
A. Base 30 
B. Overridden 20 
C. Overridden 20 Base 30 
D. Base 30 Overridden 20 

***********************************************************************************
Q20.	Given: 

public class String1 { 
public static void main(String[] args) { 
String s = "123"; 
if (s.length() >2) 
s.concat("456"); 
for(int x = 0; x <3; x++) 
s += "x"; 
System.out.println(s); 
} 
} 
What is the result? 
A. 123 
B. 123xxx 
C. 123456 
D. 123456xxx 
E. Compilation fails 

****************************************************************************
Q21.	Given: 

public class Equal { 
public static void main(String[] args) { 
String str1 = "Java"; 
String[] str2 = {"J","a","v","a"}; 
String str3 = ""; 
for (String str : str2) { 
str3 = str3+str; 
} 
boolean b1 = (str1 == str3); 
boolean b2 = (str1.equals(str3)); 
System.out.print(b1+", "+b2); 
} 
What is the result? 
A. true, false 
B. false, true 
C. true, true 
D. false, false 

*****************************************************************************
Q22.	Given: 

public class Test { 
public static void main(String[] args) { 
int arr[] = new int[4]; 
arr[0] = 1; 
arr[1] = 2; 
arr[2] = 4; 
arr[3] = 5; 
int sum = 0; 
try { 
for (int pos = 0; pos <= 4; pos++) { 
sum = sum + arr[pos]; 
} 
} catch (Exception e) { 
System.out.println("Invalid index"); 
} 
System.out.println(sum); 
} 
} 
What is the result? 
A. 12 
B. Invalid Index 
C. Invalid Index 
D. Compilation fails 

*******************************************************************************
Q23.	 public class StringReplace { 

public static void main(String[] args) { 
String message = "Hi everyone!"; 
System.out.println("message = " + message.replace("e", "X")); } 
} 
What is the result? 
A. message = Hi everyone! 
B. message = Hi XvXryonX! 
C. A compile time error is produced. 
D. A runtime error is produced. 
E. message = 
F. message = Hi Xveryone! 

***************************************************************************
Q24.	Given: 

public class Equal { 
public static void main(String[] args) { 
String str1 = "Java"; 
String[] str2 = {"J","a","v","a"}; 
String str3 = ""; 
for (String str : str2) { 
str3 = str3+str; 
} 
boolean b1 = (str1 == str3); 
boolean b2 = (str1.equals(str3)); 
System.out.print(b1+", "+b2); 
} 
What is the result? 
A. true, false 
B. false, true 
C. true, true 
D. false, false 

*******************************************************************
Q25.	Given: 

public class Test { 
public static void main(String[] args) { 
int arr[] = new int[4]; 
arr[0] = 1; 
arr[1] = 2; 
arr[2] = 4; 
arr[3] = 5; 
int sum = 0; 
try { 
for (int pos = 0; pos <= 4; pos++) { 
sum = sum + arr[pos]; 
} 
} catch (Exception e) { 
System.out.println("Invalid index"); 
} 
System.out.println(sum); 
} 
} 
What is the result? 
A. 12 
B. Invalid Index 
C. Invalid Index 
D. Compilation fails 
*************************************************************